# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET build

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  workflow_dispatch:
    inputs:
      artifact_name:
        required: false
        type: string
        default: 'nupkg'
      release_ver:
        description: 'Empty will skip release branch creation.'
        required: false
        type: string
        default: ''

  # make this action reusable
  workflow_call:
    inputs:
      artifact_name:
        required: false
        type: string
        default: 'nupkg'
      release_ver:
        description: 'Empty will skip release branch creation.'
        required: false
        type: string
        default: ''

    outputs:
      artifact_name:
        value: ${{ inputs.artifact_name }}

env:
  unity_folder: 'SatorImaging.StaticMemberAnalyzer.Unity'  # no spaces!

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: |
        cd src
        dotnet restore
    - name: Build
      run: |
        cd src
        dotnet build -c Release --no-restore
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: 'src/**/*.nupkg'

  commit:
    if: ${{ inputs.release_ver != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Commit for Unity
      continue-on-error: false
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        mv -f  src/StaticMemberAnalyzer.Package/bin/Release/*/*.dll  ${{ env.unity_folder }}
        git add --update --ignore-removal  ${{ env.unity_folder }}

        git branch ${{ inputs.release_ver }}
        git checkout ${{ inputs.release_ver }}

        git commit -m "Precompiled Assembly for Unity"
        git push
