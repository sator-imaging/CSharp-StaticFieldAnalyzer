# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET build

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  workflow_dispatch:
    # keep consistent with workflow_call
    inputs:
      artifact_name:
        required: false
        type: string
        default: 'nupkg'
      release_ver:
        description: |
          Leave empty to skip creating release branch.
          NOTE: 'release' prefix is automatically added.
        required: false
        type: string
        default: ''

  # make this action reusable
  workflow_call:
    inputs:
      artifact_name:
        required: false
        type: string
        default: 'nupkg'
      release_ver:
        description: |
          Leave empty to skip creating release branch.
          NOTE: 'release' prefix is automatically added.
        required: false
        type: string
        default: ''

    outputs:
      artifact_name:
        value: ${{ inputs.artifact_name }}
      release_ver:
        value: ${{ inputs.release_ver }}

env:
  unity_folder: 'SatorImaging.StaticMemberAnalyzer.Unity'  # no spaces!
  GH_TOKEN: ${{ github.token }}  # for github CLI

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: |
        cd src
        dotnet restore
    - name: Build
      run: |
        cd src
        dotnet build -c Release --no-restore
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: 'src/**/Release/*.nupkg'


    # actions/cache can be used to share data across jobs
    - name: Commit for Unity
      if: ${{ inputs.release_ver != '' }}
      continue-on-error: false
      run: |
        ls -al
        
        git config --global user.name  "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        # to omit `--set-upstream origin` for git push
        git config --global --add --bool push.autoSetupRemote true

        # `git checkout <NO-OPTIONS> origin/*` will checkout remote if exists otherwise create it
        git fetch --all
        git checkout origin/release/${{ inputs.release_ver }}
        git branch -vv

        mv -f  src/StaticMemberAnalyzer.Package/bin/Release/*/*.dll  ${{ env.unity_folder }}
        git add --update --ignore-removal  ${{ env.unity_folder }}
        git commit -m "Precompiled Assembly for Unity"
        git push

        gh pr create -B main -t 'release/${{ inputs.release_ver }}' -b ''
